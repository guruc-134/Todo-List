{"version":3,"sources":["components/CustomHeader.jsx","components/Info.jsx","components/Form.jsx","components/Todo.jsx","components/TodoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["CustomHeader","headerContent","className","Info","info","setInfo","onClick","href","target","rel","Form","inputText","setInputText","setTodos","todos","setStatus","filteredTodos","onChange","e","value","type","placeholder","preventDefault","length","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","App","useState","status","setFilteredTodos","useEffect","getFromLocal","localStorage","setItem","JSON","stringify","getItem","fromLocal","parse","prev","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a20662a4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction CustomHeader({headerContent}) {\r\n    return (\r\n        <div className='header'>\r\n            <h1>\r\n                {headerContent}\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomHeader\r\n","import React from 'react';\r\nimport './info-style.css'\r\nfunction Info({info,setInfo}){\r\n    const handleChange = () =>\r\n    {\r\n        setInfo(false)\r\n    }\r\n    return (\r\n        <div className='info'>\r\n            <button className =\"back-button\"onClick={handleChange}>X</button>\r\n            <h1> Todo list</h1>\r\n            <div className='content'>\r\n                <p> &rarr; Organizing your tasks with a list can make everything much more manageable and make you feel grounded. </p> \r\n                <p> &rarr; Seeing a clear outline of your completed and uncompleted tasks will help you feel organized and stay mentally focused.</p>\r\n                <br/>\r\n                <ul>\r\n                    <li>Set your goals</li>\r\n                    <li>Work on them, and mark them complete when done</li>\r\n                    <li>Use the filter option to look your accomplishments</li>\r\n                </ul>\r\n                &rarr; Don't Wait !!, Get Started now\r\n            </div>\r\n            <span>Visit this website  to get random quotes for inspiration </span><a href=\"https://guruc-134.github.io/RandomQuoteGenerator/\" target=\"_blank\" rel=\"noreferrer\">&rarr;</a>\r\n            <p className='author-info'>\r\n                made by : Guru Charan\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info\r\n","import React from 'react';\r\n\r\n\r\nconst Form = ( {inputText, setInputText, setTodos, todos, setStatus , filteredTodos }) =>\r\n{\r\n    const inputTextHandler = (e) =>\r\n    {\r\n        setInputText(e.target.value);\r\n    }\r\n\r\n    const submitTodoHandler = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        if(inputText.length >0)\r\n        {\r\n        setTodos([...todos, {text:inputText , completed: false , id: Math.random() * 1000}]);\r\n        setInputText(\"\");}\r\n        \r\n    }\r\n\r\n    const statusHandler = (e) =>\r\n    {\r\n        setStatus(e.target.value);\r\n    }\r\n    return (\r\n        <form>\r\n            <input onChange = {inputTextHandler} type=\"text\" className=\"todo-input\" value={inputText} placeholder='enter your goals' />\r\n            <button onClick = {submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n            <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n            <select onChange={statusHandler} \r\n            name=\"todos\" className=\"filter-todo\">\r\n                <option value=\"all\">All</option>\r\n                <option value=\"completed\">Completed</option>\r\n                <option value=\"uncompleted\">Uncompleted</option>\r\n            </select>\r\n            </div>\r\n        </form>\r\n    );\r\n} \r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Todo = ( {text, todos,todo, setTodos}) =>\r\n{\r\n    \r\n    const deleteHandler = (e) =>\r\n    {\r\n        setTodos(todos.filter ((el) =>el.id !== todo.id));\r\n    };\r\n\r\n    const completeHandler = (e) =>\r\n    {\r\n        setTodos( todos.map ((item)=> {\r\n            if(item.id === todo.id)\r\n            {\r\n                return { ...item ,completed : !item.completed };\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n    return( \r\n        <div className={`todo ${todo.completed ? \"todo-completed\" : \"\"}`}>\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\r\n                {text }</li>\r\n                <button  onClick = {completeHandler} className='complete-btn' >\r\n                    <i className='fas fa-check'></i>\r\n                </button>\r\n                <button onClick= {deleteHandler} className='trash-btn'>\r\n                    <i className='fas fa-trash'></i>\r\n                </button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Todo","import React from 'react';\r\n\r\nimport Todo  from './Todo';\r\nconst TodoList = ({todos , setTodos, filteredTodos}) =>\r\n{\r\n    return(\r\n        <div className = 'todo-container'>\r\n            <ul className = 'todo-list'>\r\n                {\r\n                    filteredTodos.map( todo => (\r\n                        \r\n                        <Todo\r\n                        setTodos={setTodos}\r\n                        todos= {todos}\r\n                        todo = {todo}\r\n                        text={todo.text}\r\n                        key= {todo.id} />\r\n                    ))\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React, { useState, useEffect } from 'react'; \nimport './App.css';\nimport CustomHeader from './components/CustomHeader';\nimport Info from './components/Info';\n\n// importing components\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n\n  // states\n  const [inputText , setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"All\")\n  const [filteredTodos , setFilteredTodos] = useState([]);\n  const [info,setInfo] = useState(false)\n  //useEffect\n\n  useEffect( ()=>{\n    getFromLocal();\n  },[])\n\n  useEffect( () => {\n    switch (status)\n      {\n        case 'completed':\n        setFilteredTodos( todos.filter( todo => todo.completed === true))\n        break;\n        case 'uncompleted' :\n        setFilteredTodos( todos.filter( todo => todo.completed === false))\n        break;\n      default :\n      setFilteredTodos(todos)\n      break;\n    }\n    localStorage.setItem(\"todos\", JSON.stringify(todos))\n  },[todos,status])\n  \n  const getFromLocal =() =>\n  {\n    if(localStorage.getItem('todos') === null)\n    {\n      localStorage.setItem('todos', JSON.stringify([]))\n    }\n    else\n    {\n      let fromLocal = JSON.parse(localStorage.getItem('todos'))\n      setTodos(fromLocal);\n    }\n  }\n  const handleInfo = () =>\n  {\n    setInfo(prev => ! prev)\n  }\n  return (\n    <div className=\"App\">\n        <header className='header-header'>  \n        <button className='info-btn' onClick ={handleInfo}>\n        <img src=\"https://img.icons8.com/fluent/48/000000/info-squared.png\" alt =\"info icon\"/>\n        </button>\n        {\n          info ? <Info info = {info}  setInfo = {setInfo}/> : null\n        }\n        <CustomHeader headerContent={'My Todo list'}/>\n        </header>\n        <Form todos={todos}\n        setTodos={setTodos}\n        inputText = {inputText}\n        setInputText= {setInputText}\n        setStatus={setStatus}\n        />\n        <TodoList setTodos={setTodos} todos={todos} filteredTodos = {filteredTodos} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}